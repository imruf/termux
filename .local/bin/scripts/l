#!/bin/sh

if [ -z "$1" ]; then
	url="$(xclip -o)"
else
	url="$1"
fi

html_body="
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8"/>
    <style type="text/css">
      @page {
        size: 1120px 2400px;
        margin: 0.1in;
      }
      body {
        font-family: NotoSansBengali;
        font-size: 34pt;
        line-height: 1.5;
      }
    </style>
  </head>
"

case "$url" in
	*mkv|*webm|*mp4)
		xdg-open "$url" >/dev/null 2>&1 ;;
	*png|*jpg|*jpe|*jpeg|*gif|*webp)
		curl -sL "$url" > "$PREFIX/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" && xdg-open "$PREFIX/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 & ;;
	*pdf|*cbz|*cbr)
		curl -sL "$url" > "$HOME/storage/shared/dtermux/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" && xdg-open "$HOME/storage/shared/dtermux/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" ;;
	*mp3|*flac|*opus|*mp3?source*)
		mpv "$url" 'curl -LO'  >/dev/null 2>&1 ;;
	*imgur.com*)
        yt-dlp -g "$1" | xargs xdg-open ;;
	*thedailystar.net*|*banglachotikahinii.com*|*xforum.live*|*xossipy.com*|*xossipfap.net*|*ebanglalibrary.com*|*bdnews24.com*|*bddigest*)
        case "$(printf "epub\nhtml\npdf\nimg" | fzf)" in
            epub) echo "Scrapping..."
                  python -m readability.readability -u "$url" > $HOME/storage/shared/dtermux/out.html && pandoc $HOME/storage/shared/dtermux/out.html -o $HOME/storage/shared/dtermux/out.epub && xdg-open $HOME/storage/shared/dtermux/out.epub ;;
            html) echo "Scrapping..."
                  python -m readability.readability -u "$url" > $HOME/storage/shared/dtermux/out.html && xdg-open $HOME/storage/shared/dtermux/out.html ;;
            pdf) echo "Scrapping..."
                 echo "$html_body" > $HOME/storage/shared/dtermux/out.html
                 python -m readability.readability -u "$url" >> $HOME/storage/shared/dtermux/out.html && weasyprint -e UTF-8 $HOME/storage/shared/dtermux/out.html $HOME/storage/shared/dtermux/out.pdf && xdg-open $HOME/storage/shared/dtermux/out.pdf ;;
            img) echo "Scrapping..."
                tmpdir=$PREFIX/tmp
                linkfile=$tmpdir/links
                rm $tmpdir/*.[jp][png][gif]*
                curl $url | grep i.ibb | tr '"' '\n' | awk '/https/ {print}' > $linkfile
                [ -s $linkfile ] && while IFS= read -r line
                    do
                      aria2c $line -d $tmpdir -o "$(date '+%y%m%d-%H%M-%S'.jpg)"
                    done < "$linkfile" && \
                  magick $tmpdir/*.[jp][pn]g $HOME/storage/shared/dtermux/out.pdf && xdg-open $HOME/storage/shared/dtermux/out.pdf ;;
        esac ;;
	*reddit.com*)
        tmpdir=$PREFIX/tmp
        tmpfile=$tmpdir/gallery
        linkfile=$tmpdir/links
        iurl=https://www.reddit.com/comments/$(basename $1).json
        rm $tmpdir/*.[jp][png][gif]*
        curl $iurl > $tmpfile
        tr '"' '\n' < $tmpfile | awk '/https/ && /format/ && !/blur/ {print}' | sed 's/amp;//g' | sort -n > $linkfile
        [ -s $linkfile ] && aria2c -i $linkfile -d $tmpdir && ls $tmpdir/*.[jp][pn]g | xargs -n 1 xdg-open || cat $tmpfile; sleep 0.5 ;;
    *imgchest.com*)
        tmpdir=$PREFIX/tmp
        linkfile=$tmpdir/links
        rm $tmpdir/*.[jp][png][gif]*
        curl $url | grep og:image | tr '"' '\n' | awk '/https/ {print}' > $linkfile
        [ -s $linkfile ] && aria2c -i $linkfile -d $tmpdir && ls $tmpdir/*.[jp][pn]g | xargs -n 1 xdg-open; sleep 0.5 ;;
	*redgifs.com*)
        echo $url | sed 's/#.*//;s/v3/api/;s/www/api/;s/watch/v2\/gifs/;s/$/\/sd.m3u8/' | xargs xdg-open ;;
	*youtube.com/watch*|*youtube.com/playlist*|*youtube.com/shorts*|*youtu.be*|*hooktube.com*|*bitchute.com*|*odysee.com*|*eroticmv.com*|*xnxx.com*|*pornhub.com*|*xvideos.com*|*xhamster.com*|*youjizz.com*|*youporn.com*|*sxyprn.com*|*spankbang.com*|*desixx.net*|*fsiblog3.club*|*hqporner.com*|*porntrex.com*|*v.redd.it*)
        RES="$(yt-dlp -F $url | fzf --print-query | tail -1 | awk '{print $1}')"
             yt-dlp -f $RES -g "$url" | xargs xdg-open ;;
  #       case "$(printf "gui\\ncli" | fzf)" in
  #           gui) yt-dlp -f $RES -g "$url" | xargs xdg-open ;;
  #           cli) mpv --ytdl-format=$RES "$url" ;;
  #       esac ;;
	intent://*)
        artmpv $url ;;  

	*)
		[ -f "$url" ] && setsid -f "$TERMINAL" -e "$EDITOR" "$url" >/dev/null 2>&1 || setsid -f "$BROWSER" "$url" >/dev/null 2>&1
esac
